local wall = require "world/wall"
local checkpoint = require "world/checkpoint"

local map = {}
map.walls = {}
map.checkpoints = {}

table.insert(map.walls,wall({x=792,y=581,x2=794,y2=771}))
table.insert(map.walls,wall({x=794,y=771,x2=879,y2=774}))
table.insert(map.walls,wall({x=879,y=774,x2=875,y2=578}))
table.insert(map.walls,wall({x=875,y=578,x2=994,y2=463}))
table.insert(map.walls,wall({x=994,y=463,x2=1173,y2=435}))
table.insert(map.walls,wall({x=1173,y=435,x2=1312,y2=432}))
table.insert(map.walls,wall({x=788,y=577,x2=854,y2=460}))
table.insert(map.walls,wall({x=854,y=460,x2=945,y2=396}))
table.insert(map.walls,wall({x=945,y=396,x2=1083,y2=371}))
table.insert(map.walls,wall({x=1083,y=371,x2=1271,y2=356}))
table.insert(map.walls,wall({x=1274,y=356,x2=1350,y2=361}))
table.insert(map.walls,wall({x=1311,y=431,x2=1515,y2=434}))
table.insert(map.walls,wall({x=1515,y=434,x2=1628,y2=388}))
table.insert(map.walls,wall({x=1628,y=388,x2=1701,y2=241}))
table.insert(map.walls,wall({x=1698,y=241,x2=1688,y2=27}))
table.insert(map.walls,wall({x=1688,y=28,x2=1581,y2=-87}))
table.insert(map.walls,wall({x=1581,y=-87,x2=1350,y2=-106}))
table.insert(map.walls,wall({x=1350,y=-108,x2=1174,y2=-27}))
table.insert(map.walls,wall({x=1349,y=361,x2=1525,y2=349}))
table.insert(map.walls,wall({x=1525,y=349,x2=1587,y2=304}))
table.insert(map.walls,wall({x=1587,y=304,x2=1610,y2=212}))
table.insert(map.walls,wall({x=1610,y=212,x2=1603,y2=115}))
table.insert(map.walls,wall({x=1603,y=113,x2=1577,y2=31}))
table.insert(map.walls,wall({x=1576,y=30,x2=1474,y2=-39}))
table.insert(map.walls,wall({x=1472,y=-39,x2=1346,y2=-18}))
table.insert(map.walls,wall({x=1346,y=-18,x2=1248,y2=38}))
table.insert(map.walls,wall({x=1245,y=39,x2=965,y2=167}))
table.insert(map.walls,wall({x=1172,y=-29,x2=857,y2=134}))
table.insert(map.walls,wall({x=857,y=134,x2=830,y2=187}))
table.insert(map.walls,wall({x=830,y=187,x2=839,y2=233}))
table.insert(map.walls,wall({x=839,y=233,x2=883,y2=258}))
table.insert(map.walls,wall({x=883,y=258,x2=1013,y2=252}))
table.insert(map.walls,wall({x=1015,y=251,x2=1195,y2=206}))
table.insert(map.walls,wall({x=1195,y=206,x2=1348,y2=104}))
table.insert(map.walls,wall({x=1349,y=106,x2=1453,y2=98}))
table.insert(map.walls,wall({x=1453,y=98,x2=1504,y2=145}))
table.insert(map.walls,wall({x=1504,y=145,x2=1497,y2=205}))
table.insert(map.walls,wall({x=1497,y=205,x2=1461,y2=249}))
table.insert(map.walls,wall({x=1460,y=249,x2=1196,y2=208}))
table.insert(map.walls,wall({x=902,y=257,x2=598,y2=339}))
table.insert(map.walls,wall({x=941,y=395,x2=598,y2=396}))
table.insert(map.walls,wall({x=594,y=338,x2=510,y2=340}))
table.insert(map.walls,wall({x=597,y=395,x2=512,y2=396}))
table.insert(map.walls,wall({x=528,y=-613,x2=684,y2=-546}))
table.insert(map.walls,wall({x=631,y=-284,x2=706,y2=-415}))
table.insert(map.walls,wall({x=686,y=-550,x2=958,y2=-592}))
table.insert(map.walls,wall({x=707,y=-419,x2=968,y2=-559}))
table.insert(map.walls,wall({x=524,y=-616,x2=450,y2=-601}))
table.insert(map.walls,wall({x=630,y=-282,x2=561,y2=-258}))
table.insert(map.walls,wall({x=934,y=-1337,x2=354,y2=-1217}))
table.insert(map.walls,wall({x=352,y=-1217,x2=289,y2=-1174}))
table.insert(map.walls,wall({x=287,y=-1172,x2=254,y2=-1072}))
table.insert(map.walls,wall({x=254,y=-1070,x2=281,y2=-978}))
table.insert(map.walls,wall({x=283,y=-970,x2=445,y2=-920}))
table.insert(map.walls,wall({x=907,y=-1168,x2=400,y2=-1165}))
table.insert(map.walls,wall({x=395,y=-1166,x2=332,y2=-1145}))
table.insert(map.walls,wall({x=331,y=-1145,x2=315,y2=-1090}))
table.insert(map.walls,wall({x=311,y=-1082,x2=334,y2=-1010}))
table.insert(map.walls,wall({x=334,y=-1010,x2=360,y2=-1001}))
table.insert(map.walls,wall({x=355,y=-1002,x2=424,y2=-974}))
table.insert(map.walls,wall({x=442,y=-925,x2=526,y2=-957}))
table.insert(map.walls,wall({x=527,y=-959,x2=546,y2=-1034}))
table.insert(map.walls,wall({x=546,y=-1034,x2=522,y2=-1113}))
table.insert(map.walls,wall({x=522,y=-1115,x2=473,y2=-1163}))
table.insert(map.walls,wall({x=419,y=-978,x2=484,y2=-1004}))
table.insert(map.walls,wall({x=486,y=-1008,x2=479,y2=-1081}))
table.insert(map.walls,wall({x=478,y=-1081,x2=443,y2=-1122}))
table.insert(map.walls,wall({x=443,y=-1122,x2=383,y2=-1121}))
table.insert(map.walls,wall({x=379,y=-1118,x2=364,y2=-1072}))
table.insert(map.walls,wall({x=365,y=-1071,x2=403,y2=-1035}))
table.insert(map.walls,wall({x=405,y=-1036,x2=426,y2=-1054}))
table.insert(map.walls,wall({x=426,y=-1054,x2=431,y2=-1068}))

table.insert(map.checkpoints,checkpoint({x=854,y=461,x2=925,y2=519}))
table.insert(map.checkpoints,checkpoint({x=1463,y=355,x2=1468,y2=423}))
table.insert(map.checkpoints,checkpoint({x=1578,y=26,x2=1643,y2=-6}))
table.insert(map.checkpoints,checkpoint({x=1039,y=127,x2=1002,y2=63}))
table.insert(map.checkpoints,checkpoint({x=1373,y=94,x2=1364,y2=-13}))
table.insert(map.checkpoints,checkpoint({x=1285,y=228,x2=1275,y2=347}))
table.insert(map.checkpoints,checkpoint({x=532,y=343,x2=531,y2=391}))
table.insert(map.checkpoints,checkpoint({x=278,y=287,x2=233,y2=395}))
table.insert(map.checkpoints,checkpoint({x=184,y=210,x2=58,y2=264}))
table.insert(map.checkpoints,checkpoint({x=137,y=71,x2=7,y2=82}))
table.insert(map.checkpoints,checkpoint({x=146,y=-54,x2=12,y2=-74}))
table.insert(map.checkpoints,checkpoint({x=189,y=-169,x2=63,y2=-229}))
table.insert(map.checkpoints,checkpoint({x=303,y=-278,x2=200,y2=-371}))
table.insert(map.checkpoints,checkpoint({x=430,y=-340,x2=365,y2=-443}))
table.insert(map.checkpoints,checkpoint({x=562,y=-375,x2=524,y2=-501}))
table.insert(map.checkpoints,checkpoint({x=959,y=-586,x2=964,y2=-566}))
table.insert(map.checkpoints,checkpoint({x=1105,y=-734,x2=1219,y2=-684}))
table.insert(map.checkpoints,checkpoint({x=1147,y=-880,x2=1275,y2=-884}))
table.insert(map.checkpoints,checkpoint({x=1134,y=-1022,x2=1240,y2=-1063}))
table.insert(map.checkpoints,checkpoint({x=1059,y=-1126,x2=1144,y2=-1209}))
table.insert(map.checkpoints,checkpoint({x=946,y=-1168,x2=923,y2=-1273}))
table.insert(map.checkpoints,checkpoint({x=425,y=-1063,x2=374,y2=-1077}))
table.insert(map.checkpoints,checkpoint({x=309,y=-1079,x2=260,y2=-1080}))

return map